package com.tmg.generator.controller;

import com.tmg.generator.data.${Table.name}Data;
import com.tmg.generator.services.${Table.name}Service;

import java.util.List;
import java.util.Date;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.servlet.ModelAndView;


@Controller
@RequestMapping(value = "/${Table.name}")
public class ${Table.name}Controller {

@Autowired
private ${Table.name}Service service;

    @RequestMapping(value = "/index", method = RequestMethod.GET, produces = "application/json")
	public @ResponseBody ModelAndView getView()
	{
	   return new ModelAndView("${Table.camelCaseName}");
	}
	
	
	@RequestMapping(value = "/list", method = RequestMethod.GET, produces = "application/json")
	public @ResponseBody List<${Table.name}Data> getAll${Table.name}()
	{
	   return service.getAll${Table.name}();
	}

#foreach($attribute in $Table.attributes)
#if($attribute.primaryKey == "true")
@RequestMapping(value = "/getById", method = RequestMethod.GET, produces = "application/json")
	public @ResponseBody ${Table.name}Data get${Table.name}ById(@RequestParam("$attribute.camelCaseName") ${attribute.dataType} ${attribute.camelCaseName})
	{
	return service.get${Table.name}ById(${attribute.camelCaseName});
	}

@RequestMapping(value = "/deleteById",  method = RequestMethod.POST, produces = "application/json")
	public @ResponseBody void
	delete${Table.name}ById(@RequestParam("$attribute.camelCaseName") ${attribute.dataType} ${attribute.camelCaseName})
	{
	    service.delete${Table.name}ById(${attribute.camelCaseName});
	}

#else
@RequestMapping(value = "/getBy${attribute.name}", method = RequestMethod.GET, produces = "application/json")
	public @ResponseBody
	List<${Table.name}Data> get${Table.name}By${attribute.name}(@RequestParam("$attribute.camelCaseName") ${attribute.dataType} ${attribute.camelCaseName})
	{
	return service.get${Table.name}By${attribute.name}(${attribute.camelCaseName});
	}
	
#end
#end

@RequestMapping(value = "/save", method = RequestMethod.POST, produces = "application/json")
	public @ResponseBody
	void save${Table.name}(
			@RequestParam( "${Table.name}Data") ${Table.name}Data data)
			{
			 service.save${Table.name}(data);
			}

@RequestMapping(value = "/update", method = RequestMethod.POST, produces = "application/json")
	public @ResponseBody
	void update${Table.name}(
			@RequestParam("${Table.name}Data") ${Table.name}Data data)
			{
			 service.update${Table.name}(data);
			}
			
@RequestMapping(value = "/delete", method = RequestMethod.POST, produces = "application/json")
	public @ResponseBody
	void delete${Table.name}(
			@RequestParam( "${Table.name}Data") ${Table.name}Data data)
			{
			 service.delete${Table.name}(data);
			}
			
}