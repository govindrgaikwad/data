var $Table.camelCaseName = function () {

    var URLs = {
    
        ${Table.camelCaseName}List: '/${Table.name}/list'
    };

    var elementIDs = {
        //table element for the ${Table.camelCaseName} Grid 
        ${Table.camelCaseName}Grid: '${Table.camelCaseName}',
        //with hash for use with jQuery
        ${Table.camelCaseName}GridJQ: '#${Table.camelCaseName}',
    };

    function init() {
        $(document).ready(function () {
            load${Table.name}Grid();
        });
    }

    function load${Table.name}Grid() {

        //set column list for grid
       
        var colArray = [ #foreach($attribute in $Table.attributes) '${attribute.camelCaseName}', #end];

        //set column models
        var colModel = [];
        #foreach($attribute in $Table.attributes)
        #if($attribute.dataType == "Date")
        colModel.push({ name: '${attribute.camelCaseName}', index: '${attribute.camelCaseName}', editable: false, align: 'center', formatter: 'date', formatoptions: { srcformat: "m/d/Y", newformat: "m/d/Y" } });
        #else
        colModel.push({ name: '${attribute.camelCaseName}', index: '${attribute.camelCaseName}', editable: false, align: 'left' });
        #end
        #end

        //clean up the grid first - only table element remains after this
        $(elementIDs.${Table.camelCaseName}GridJQ).jqGrid('GridUnload');

        //adding the pager element
        $(elementIDs.${Table.camelCaseName}GridJQ).parent().append("<div id='p" + elementIDs.${Table.camelCaseName}Grid + "'></div>");
        var url = URLs.${Table.camelCaseName}List;
        $(elementIDs.${Table.camelCaseName}GridJQ).jqGrid({
            url: url,
            datatype: 'json',
            cache: false,
            colNames: colArray,
            colModel: colModel,
            caption: '${Table.camelCaseName} List',
            height: '90',
            rowNum: 10000,
            loadonce: true,
            autowidth: true,
            viewrecords: true,
            hidegrid: true,
            hiddengrid: false,
            altRows: true,
            pager: '#p' + elementIDs.${Table.camelCaseName}Grid,
            sortname: 'Folder',
            altclass: 'alternate',
            rowList: [10, 20, 30],
            gridComplete: function () {
               
            }
        });


        //remove default buttons
        $(elementIDs.${Table.camelCaseName}GridJQ).jqGrid('navGrid', pagerElement, { edit: false, add: false, del: false, search: false });

        //edit button in footer of grid that pops up the edit form design dialog
        $(elementIDs.${Table.camelCaseName}GridJQ).jqGrid('navButtonAdd', pagerElement,
        {
            caption: '',
            buttonicon: 'ui-icon-pencil',
            title: 'Edit',
            onClickButton: function () {

            }
        });

        //View button in footer of grid 
        $(elementIDs.${Table.camelCaseName}GridJQ).jqGrid('navButtonAdd', pagerElement,
           {
               caption: '', buttonicon: 'ui-icon-document', title: 'View',
               onClickButton: function () {
                
               }
           });
    }


    //initialization of the ${Table.name} Grid when the ${Table.camelCaseName} List function is loaded in browser and invoked
    init();
    return {
        load${Table.name}: function () {
            load${Table.name}Grid();
        }
    }
}();

